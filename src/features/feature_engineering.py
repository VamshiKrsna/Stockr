# In this script, we will further enhance the dataset by adding more features like rolling window features.
import pandas as pd
from datetime import datetime

def add_features(df):
    """
    Enhances the stock data with additional features like rolling averages, lag features, 
    and technical indicators like EMA, MACD, and RSI.
    """
    # Drop Dividends and Stock Splits as they are not useful for forecasting
    df = df.drop(["Dividends", "Stock Splits"], axis=1, errors='ignore')

    # Convert the Date column to datetime
    df['Date'] = pd.to_datetime(df['Date'], errors='coerce', utc=True)

    # Extract day, day of week, quarter, month, and year
    df['Day'] = df['Date'].dt.day
    df['DayOfWeek'] = df['Date'].dt.dayofweek
    df['Quarter'] = df['Date'].dt.quarter
    df['Month'] = df['Date'].dt.month
    df['Year'] = df['Date'].dt.year

    # Add rolling mean features for 3, 9, and 18-day windows
    df['S_3'] = df['Close'].rolling(window=3).mean()
    df['S_9'] = df['Close'].rolling(window=9).mean()
    df['S_18'] = df['Close'].rolling(window=18).mean()

    # Add lag features
    for i in range(1, 4):
        df[f'lag_{i}'] = df['Close'].shift(i)

    # Add rolling window statistics
    df['Rolling_Mean'] = df['Close'].rolling(window=3).mean()
    df['Rolling_Min'] = df['Close'].rolling(window=3).min()
    df['Rolling_Max'] = df['Close'].rolling(window=3).max()

    # Exponential Moving Average
    df["EMA_12"] = df['Close'].ewm(span=12, adjust=False).mean()
    df["EMA_26"] = df['Close'].ewm(span=26, adjust=False).mean()  # Corrected span value

    # MACD - Moving Average Convergence Divergence
    df['MACD'] = df['EMA_12'] - df['EMA_26']
    df['MACD_Signal'] = df['MACD'].ewm(span=9, adjust=False).mean()

    # RSI - Relative Strength Index
    delta = df['Close'].diff(1)
    gain = delta.where(delta > 0, 0).rolling(window=14).mean()
    loss = -delta.where(delta < 0, 0).rolling(window=14).mean()
    RS = gain / loss
    df['RSI'] = 100 - (100 / (1 + RS))

    # Overall statistics
    df['Overall_Mean'] = df['Close'].mean()
    df['Overall_Min'] = df['Close'].min()
    df['Overall_Max'] = df['Close'].max()

    # Shift the target (Close) variable for future prediction
    df['Target_Close'] = df['Close'].shift(-1)

    # Drop rows with missing values generated by rolling calculations and target shifting
    df.dropna(inplace=True)

    return df

if __name__ == "__main__":
    # Process and add features for each specified stock
    for stock in ["AAPL", "MSFT", "GOOGL", "AMZN", "TSLA"]:
        file_path = f"../data/{stock}.csv"
        try:
            df = pd.read_csv(file_path)
            df = add_features(df)
            df.to_csv(file_path, index=False)
            print(f"Features added for {stock}")
        except Exception as e:
            print(f"Error processing {stock}: {e}")
